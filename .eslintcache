[{"/home/sebosu/Code/shopping-cart/src/index.js":"1","/home/sebosu/Code/shopping-cart/src/App.js":"2","/home/sebosu/Code/shopping-cart/src/components/Navbar.js":"3","/home/sebosu/Code/shopping-cart/src/components/Home.js":"4","/home/sebosu/Code/shopping-cart/src/components/Checkout.js":"5","/home/sebosu/Code/shopping-cart/src/components/Store.js":"6"},{"size":230,"mtime":1611083319389,"results":"7","hashOfConfig":"8"},{"size":3591,"mtime":1610981820222,"results":"9","hashOfConfig":"8"},{"size":705,"mtime":1610975554959,"results":"10","hashOfConfig":"8"},{"size":265,"mtime":1611081786205,"results":"11","hashOfConfig":"8"},{"size":1959,"mtime":1610981735042,"results":"12","hashOfConfig":"8"},{"size":1685,"mtime":1610979182209,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"283v5u",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/sebosu/Code/shopping-cart/src/index.js",[],"/home/sebosu/Code/shopping-cart/src/App.js",[],["29","30"],"/home/sebosu/Code/shopping-cart/src/components/Navbar.js",[],["31","32"],"/home/sebosu/Code/shopping-cart/src/components/Home.js",[],"/home/sebosu/Code/shopping-cart/src/components/Checkout.js",["33","34","35"],"import {React, useState, useEffect} from \"react\"\nimport \"./Checkout.css\";\n\nexport default function Checkout(props){\n\tconst [buttonDisplay, setButtonDisplay] = useState(false);\n    const [total, setTotal] = useState(0);\n\n    useEffect(()=>{\n        let sum = 0;\n        console.log('USE EFFECT')\n        for (const index in props.items){\n            let count = props.items[index].count\n            let price = props.items[index].price\n            sum += count * price\n        }\n        setTotal(sum);\n    }, []);\n\n\n    return(\n        <div className=\"checkoutContainer\">\n        \t{   \n                props.items.map((item, index)=>{\n                \t{if (item.count > 0){\n                        // just placing it after item.count would cause an infinite loop of\n                        // rerendering, thus doing an if here\n                \t\tif (buttonDisplay === false){\n                            setButtonDisplay(true);\n                        }\n                \t\n                \treturn(\n                        <div key={`${index}`} className=\"item\">\n                        \t<img src={item.image} alt={item.name} className=\"checkoutImage\" ></img>\n                        \t<div className=\"itemInfo\">\n                        \t\t<div style={{textTransform: 'capitalize'}}> {item.name} </div>\n                        \t\t<div>Quantity: {item.count}</div>\n                        \t\t<div>Price: ${item.price * item.count}</div>\n                                {/* {total += item.price * item.count} */}\n                                {/* {setButtonDisplay(true)} */}\n                        \t</div>\n                        </div>\n                        )\n                \t}\n                \t}\n                })\n\n            }\n            <div style={{display: buttonDisplay ? 'block':'none'}} className=\"total\">Total: ${total}</div>\n            <button style={{display: buttonDisplay ? 'block':'none'}}>Proceed to payment</button>\n        </div>\n    )\n}\n ","/home/sebosu/Code/shopping-cart/src/components/Store.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"36","replacedBy":"40"},{"ruleId":"38","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":17,"column":8,"nodeType":"44","endLine":17,"endColumn":10,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":23,"column":46,"nodeType":"48","messageId":"49","endLine":23,"endColumn":48},{"ruleId":"50","severity":1,"message":"51","line":24,"column":18,"nodeType":"52","messageId":"53","endLine":44,"endColumn":19},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],["54"],["55"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.items'. Either include it or remove the dependency array.","ArrayExpression",["56"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [props.items]",{"range":"59","text":"60"},[508,510],"[props.items]"]